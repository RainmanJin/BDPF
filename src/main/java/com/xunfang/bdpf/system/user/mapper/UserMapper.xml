<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xunfang.bdpf.system.user.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.xunfang.bdpf.system.user.entity.User">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="account" jdbcType="VARCHAR" property="account" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="user_type" jdbcType="INTEGER" property="userType" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="class_id" jdbcType="VARCHAR" property="classId" />
		<result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
		<result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
		<result column="login_count" jdbcType="INTEGER" property="loginCount" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, account, password, user_type, name,class_id, mobile, email,
		login_time, last_login_time,
		login_count, status, create_time
	</sql>
	<select id="selectByExample" parameterType="com.xunfang.bdpf.system.user.entity.UserExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from bdpf_system_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from bdpf_system_user
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<select id="selectByAccount" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from bdpf_system_user
		where account = #{account,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from bdpf_system_user
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.xunfang.bdpf.system.user.entity.UserExample">
		delete from bdpf_system_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.xunfang.bdpf.system.user.entity.User">
		insert into bdpf_system_user (id, account, password,
		user_type, name, mobile,
		email, login_time, last_login_time,
		login_count, status, create_time,
		class_id)
		values (#{id,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{userType,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{loginTime,jdbcType=TIMESTAMP},
		#{lastLoginTime,jdbcType=TIMESTAMP},
		#{loginCount,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
		#{classId,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.xunfang.bdpf.system.user.entity.User">
		insert into bdpf_system_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="account != null">
				account,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="userType != null">
				user_type,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="loginTime != null">
				login_time,
			</if>
			<if test="lastLoginTime != null">
				last_login_time,
			</if>
			<if test="loginCount != null">
				login_count,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="classId != null">
				class_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="account != null">
				#{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="loginTime != null">
				#{loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginTime != null">
				#{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="loginCount != null">
				#{loginCount,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="classId != null">
				#{classId,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.xunfang.bdpf.system.user.entity.UserExample"
		resultType="java.lang.Long">
		select count(*) from bdpf_system_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update bdpf_system_user
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.account != null">
				account = #{record.account,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.userType != null">
				user_type = #{record.userType,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.mobile != null">
				mobile = #{record.mobile,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.loginTime != null">
				login_time = #{record.loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.lastLoginTime != null">
				last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.loginCount != null">
				login_count = #{record.loginCount,jdbcType=INTEGER},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.classId != null">
				class_id = #{record.classId,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update bdpf_system_user
		set id = #{record.id,jdbcType=VARCHAR},
		account = #{record.account,jdbcType=VARCHAR},
		password = #{record.password,jdbcType=VARCHAR},
		user_type = #{record.userType,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		mobile = #{record.mobile,jdbcType=VARCHAR},
		email = #{record.email,jdbcType=VARCHAR},
		login_time = #{record.loginTime,jdbcType=TIMESTAMP},
		last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
		login_count = #{record.loginCount,jdbcType=INTEGER},
		status = #{record.status,jdbcType=INTEGER},
		create_time = #{record.createTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.xunfang.bdpf.system.user.entity.User">
		update bdpf_system_user
		<set>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				user_type = #{userType,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="loginTime != null">
				login_time = #{loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="loginCount != null">
				login_count = #{loginCount,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="classId != null">
				class_id = #{classId,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xunfang.bdpf.system.user.entity.User">
		update bdpf_system_user
		set account = #{account,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		user_type = #{userType,jdbcType=INTEGER},
		name = #{name,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		class_id = #{classId,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		login_time = #{loginTime,jdbcType=TIMESTAMP},
		last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
		login_count = #{loginCount,jdbcType=INTEGER},
		status = #{status,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<select id="getUserCount" parameterType="Map" resultType="long">
		SELECT
		count(user.id)
		FROM
		bdpf_system_user user
		where 1=1
		<if test="keywords != null and keywords != ''">
			and USER.name LIKE '%${keywords}%' or USER.account LIKE '%${keywords}%'
		</if>
	</select>

	<select id="queryUserByPage" parameterType="Map" resultType="com.xunfang.bdpf.system.user.entity.User">
		SELECT
		user.account as account,
		user.id as id,
		user.name as name,
		user.user_type as userType,
		GROUP_CONCAT(clas.name) as classId
		FROM
		bdpf_system_user user
		LEFT JOIN bdpf_experiment_class clas ON FIND_IN_SET(clas.id,user.class_id)
		where 1=1
		<if test="keywords != null and keywords != ''">
			and USER.name LIKE '%${keywords}%' or USER.account LIKE '%${keywords}%'
		</if>
		group by user.account,user.id,user.name,user.user_type
		order by classId desc
		limit ${skip},${limit}
	</select>
	
	<select id="getStudentCount" parameterType="Map" resultType="long">
		SELECT
		count(user.account)
		FROM
		bdpf_system_user user
		LEFT JOIN bdpf_experiment_class clas ON user.class_id = clas.id
		where  user.user_type = 1
		<if test="createUser != null and createUser != ''">
		    and  find_in_set(clas.id,(select class_id from bdpf_system_user where account = '${createUser}'))
		</if>
		<if test="keywords != null and keywords != ''">
			and (USER.name LIKE '%${keywords}%' or USER.account LIKE '%${keywords}%')
		</if>
	</select>

	<select id="queryStudentByPage" parameterType="Map" resultType="com.xunfang.bdpf.system.user.entity.User">
		SELECT
		user.account as account,
		user.id as id,
		user.name as name,
		user.user_type as userType,
		user.mobile as mobile,
		user.email as email,
		clas.name as classId
		FROM
		bdpf_system_user user
		LEFT JOIN bdpf_experiment_class clas ON user.class_id = clas.id
		where  user.user_type = 1
		<if test="createUser != null and createUser != ''">
		   and  find_in_set(clas.id,(select class_id from bdpf_system_user where account = '${createUser}'))
		</if>
		<if test="keywords != null and keywords != ''">
			and (USER.name LIKE '%${keywords}%' or USER.account LIKE '%${keywords}%')
		</if>
		order by classId desc
		limit ${skip},${limit}
	</select>
	
	<select id="queryUserListByClasId"  resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from bdpf_system_user
		where user_type = 1 and  class_id  in
		<foreach collection="array"  item="classId"  index="index"
            open="(" close=")" separator=",">
            #{classId}
        </foreach>
	</select>
	
	<insert id="batchInsertUser" parameterType="java.util.List">
		update bdpf_system_user (id, account, password,name,user_type,class_id,status)
		values
		<foreach collection="list" index="index" item="item" separator=",">
				( #{item.id}, #{item.account}, #{item.password}, #{item.name}, #{item.userType}, #{item.classId}, #{item.status})
	   </foreach>
	</insert>
	
	<update id="batchUpdateUser" parameterType="java.util.List">
		update bdpf_system_user set
    	 account=
	  <foreach collection="list" item="item" index="index" separator=" " open="case ID" close="end">
	      when #{item.id,jdbcType=VARCHAR} then #{item.account,jdbcType=VARCHAR}
	  </foreach>
	  	 ,name=
	  <foreach collection="list" item="item" index="index" separator=" " open="case ID" close="end">
	      when #{item.id,jdbcType=VARCHAR} then #{item.name,jdbcType=VARCHAR}
	  </foreach>
	  	  ,user_type=
	  <foreach collection="list" item="item" index="index" separator=" " open="case ID" close="end">
	      when #{item.id,jdbcType=VARCHAR} then #{item.userType,jdbcType=INTEGER}
	  </foreach>
	  	 ,class_id=
	  <foreach collection="list" item="item" index="index" separator=" " open="case ID" close="end">
	      when #{item.id,jdbcType=VARCHAR} then #{item.classId,jdbcType=VARCHAR}
	  </foreach>
	  	 ,status=
	  <foreach collection="list" item="item" index="index" separator=" " open="case ID" close="end">
	      when #{item.id,jdbcType=VARCHAR} then #{item.status,jdbcType=VARCHAR}
	  </foreach>
	  	 where id in
	  <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
	      #{item.id,jdbcType=VARCHAR}
	  </foreach>
  </update>
	
	<select id="authLogin"  parameterType="Map" resultType="int">
		select
		count(*)
		from bdpf_system_user
		where account = '${account}'  and password = '${password}' 
	</select>
	<select id="greadIds" resultType="com.xunfang.bdpf.system.user.entity.User">
		select distinct CONCAT(b.id) as id from bdpf_experiment_grade a,bdpf_system_user b
		where a.student_id = b.account
		union all
		select distinct CONCAT(teacher_id) from bdpf_experiment_grade
	</select>
	<select id="selectClasCount" parameterType="java.lang.String" resultType="int">
		select count(id) 
		from bdpf_system_user
		where user_type = 0
		<if test="clasId != null and clasId != ''">
			and FIND_IN_SET('${clasId}',class_id)
		</if>
	</select>
</mapper>