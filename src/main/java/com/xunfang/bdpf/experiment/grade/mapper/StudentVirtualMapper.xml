<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xunfang.bdpf.experiment.grade.mapper.StudentVirtualMapper">
  <resultMap id="BaseResultMap" type="com.xunfang.bdpf.experiment.grade.entity.StudentVirtual">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="virtual_id" jdbcType="VARCHAR" property="virtualId" />
    <result column="virtual_name" jdbcType="VARCHAR" property="virtualName" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <result column="group_id" jdbcType="VARCHAR" property="groupId" />
    <result column="course_task_id" jdbcType="VARCHAR" property="courseTaskId" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, virtual_id, virtual_name, class_id, group_id, course_task_id, type
  </sql>
  <select id="selectByExample" parameterType="com.xunfang.bdpf.experiment.grade.entity.StudentVirtualExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bdpf_experiment_student_virtual
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bdpf_experiment_student_virtual
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from bdpf_experiment_student_virtual
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xunfang.bdpf.experiment.grade.entity.StudentVirtualExample">
    delete from bdpf_experiment_student_virtual
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xunfang.bdpf.experiment.grade.entity.StudentVirtual">
    insert into bdpf_experiment_student_virtual (id, account, virtual_id, 
      virtual_name, class_id, group_id, 
      course_task_id, type)
    values (#{id,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{virtualId,jdbcType=VARCHAR}, 
      #{virtualName,jdbcType=VARCHAR}, #{classId,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR}, 
      #{courseTaskId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xunfang.bdpf.experiment.grade.entity.StudentVirtual">
    insert into bdpf_experiment_student_virtual
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="virtualId != null">
        virtual_id,
      </if>
      <if test="virtualName != null">
        virtual_name,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="courseTaskId != null">
        course_task_id,
      </if>
      <if test="type != null">
      	type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="virtualId != null">
        #{virtualId,jdbcType=VARCHAR},
      </if>
      <if test="virtualName != null">
        #{virtualName,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="courseTaskId != null">
        #{courseTaskId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xunfang.bdpf.experiment.grade.entity.StudentVirtualExample" resultType="java.lang.Long">
    select count(*) from bdpf_experiment_student_virtual
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bdpf_experiment_student_virtual
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.virtualId != null">
        virtual_id = #{record.virtualId,jdbcType=VARCHAR},
      </if>
      <if test="record.virtualName != null">
        virtual_name = #{record.virtualName,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseTaskId != null">
        course_task_id = #{record.courseTaskId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bdpf_experiment_student_virtual
    set id = #{record.id,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      virtual_id = #{record.virtualId,jdbcType=VARCHAR},
      virtual_name = #{record.virtualName,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=VARCHAR},
      group_id = #{record.groupId,jdbcType=VARCHAR},
      course_task_id = #{record.courseTaskId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunfang.bdpf.experiment.grade.entity.StudentVirtual">
    update bdpf_experiment_student_virtual
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="virtualId != null">
        virtual_id = #{virtualId,jdbcType=VARCHAR},
      </if>
      <if test="virtualName != null">
        virtual_name = #{virtualName,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="courseTaskId != null">
        course_task_id = #{courseTaskId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunfang.bdpf.experiment.grade.entity.StudentVirtual">
    update bdpf_experiment_student_virtual
    set account = #{account,jdbcType=VARCHAR},
      virtual_id = #{virtualId,jdbcType=VARCHAR},
      virtual_name = #{virtualName,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=VARCHAR},
      course_task_id = #{courseTaskId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsertStudentVirtual" parameterType="java.util.List">
		insert into bdpf_experiment_student_virtual (id, account, virtual_id,virtual_name,class_id,course_task_id,type,group_id)
		values
	<foreach collection="list" index="index" item="item" separator=",">
			( #{item.id}, #{item.account}, #{item.virtualId}, #{item.virtualName}, #{item.classId} , #{item.courseTaskId},#{item.type,jdbcType=INTEGER}, #{item.groupId} )
   </foreach>
	</insert>
	
	<select id="selectByClassIdAndAccount"  parameterType="Map"  resultMap="BaseResultMap">
		select
	    <include refid="Base_Column_List" />
	    from bdpf_experiment_student_virtual where 1=1
	    <if test="groupId != null and groupId != ''">
			and group_id = '${groupId}'
		</if>
		<if test="groupId == null or groupId == ''">
			<if test="classId != null and classId != '' and  (account == null or account == '' )">
					and class_id in 
					<foreach item="item" index="index" collection="classId" open="(" separator="," close=")">
						#{item}
					</foreach>
			</if>
			<if test="account != null and account != '' and classId != null and classId != '' ">
				and (account = '${account}'  or class_id in 
				<foreach item="item" index="index" collection="classId" open="(" separator="," close=")">
					#{item}
				</foreach>
				 )
			</if>
			<if test="account != null and account != '' and  (classId == null or classId == '' )">
			    and  account = '${account}'
			</if>
		</if>
	</select>
</mapper>