<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xunfang.bdpf.experiment.plan.mapper.PlanMapper">
  <resultMap id="BaseResultMap" type="com.xunfang.bdpf.experiment.plan.entity.Plan">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="learning_time" jdbcType="VARCHAR" property="learningTime" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="course_type" jdbcType="INTEGER" property="courseType" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, learning_time, num, course_type, description
  </sql>
  <select id="selectByExample" parameterType="com.xunfang.bdpf.experiment.plan.entity.PlanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bdpf_experiment_teaching_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bdpf_experiment_teaching_plan
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from bdpf_experiment_teaching_plan
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xunfang.bdpf.experiment.plan.entity.PlanExample">
    delete from bdpf_experiment_teaching_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xunfang.bdpf.experiment.plan.entity.Plan">
    insert into bdpf_experiment_teaching_plan (id, name, learning_time, 
      num, course_type, description
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{learningTime,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{courseType,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xunfang.bdpf.experiment.plan.entity.Plan">
    insert into bdpf_experiment_teaching_plan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="learningTime != null">
        learning_time,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="courseType != null">
        course_type,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="learningTime != null">
        #{learningTime,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="courseType != null">
        #{courseType,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xunfang.bdpf.experiment.plan.entity.PlanExample" resultType="java.lang.Long">
    select count(*) from bdpf_experiment_teaching_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bdpf_experiment_teaching_plan
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.learningTime != null">
        learning_time = #{record.learningTime,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.courseType != null">
        course_type = #{record.courseType,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bdpf_experiment_teaching_plan
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      learning_time = #{record.learningTime,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      course_type = #{record.courseType,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunfang.bdpf.experiment.plan.entity.Plan">
    update bdpf_experiment_teaching_plan
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="learningTime != null">
        learning_time = #{learningTime,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="courseType != null">
        course_type = #{courseType,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunfang.bdpf.experiment.plan.entity.Plan">
    update bdpf_experiment_teaching_plan
    set name = #{name,jdbcType=VARCHAR},
      learning_time = #{learningTime,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      course_type = #{courseType,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

	<select id="queryPlanByPage" parameterType="Map" resultType="com.xunfang.bdpf.experiment.plan.entity.Plan">
		select 
			a.id as id, 
			a.name as name, 
			a.learning_time as learningTime, 
			a.num as num, 
			a.course_type as courseType, 
			a.description as description
		from bdpf_experiment_teaching_plan a,bdpf_experiment_teaching_plan_line b,bdpf_experiment_course_resource c
		where a.id = b.teaching_plan_id and b.course_resource_id = c.id
		<if test="createUser != null and createUser != ''">
			and c.create_user = '${createUser}'
		</if>
		<if test="keywords != null and keywords != ''">
			and a.name like '%${keywords}%'
		</if>
		group by a.id,a.name,a.learning_time,a.num,a.course_type,a.description
		order by a.name desc
		limit ${skip},${limit}
	</select>

	<select id="getPlanCount" parameterType="Map" resultType="long">
		select 
			count(distinct a.id)
		from bdpf_experiment_teaching_plan a,bdpf_experiment_teaching_plan_line b,bdpf_experiment_course_resource c
		where a.id = b.teaching_plan_id and b.course_resource_id = c.id
		<if test="createUser != null and createUser != ''">
			and c.create_user = '${createUser}'
		</if>
		<if test="keywords != null and keywords != ''">
			and a.name like '%${keywords}%'
		</if>
	</select>

</mapper>