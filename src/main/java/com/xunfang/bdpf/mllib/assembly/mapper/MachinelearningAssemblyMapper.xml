<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xunfang.bdpf.mllib.assembly.mapper.MachinelearningAssemblyMapper">
  <resultMap id="BaseResultMap" type="com.xunfang.bdpf.mllib.assembly.entity.MachinelearningAssembly">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="bdpf_mllib_assembly_id" jdbcType="VARCHAR" property="bdpfMllibAssemblyId" />
    <result column="num_classes" jdbcType="INTEGER" property="numClasses" />
    <result column="max_depth" jdbcType="INTEGER" property="maxDepth" />
    <result column="max_Bins" jdbcType="INTEGER" property="maxBins" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="num_Iterations" jdbcType="INTEGER" property="numIterations" />
    <result column="k" jdbcType="INTEGER" property="k" />
    <result column="num_Trees" jdbcType="INTEGER" property="numTrees" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bdpf_mllib_assembly_id, num_classes, max_depth, max_Bins, type, num_Iterations, 
    k, num_Trees
  </sql>
  <select id="selectByExample" parameterType="com.xunfang.bdpf.mllib.assembly.entity.MachinelearningAssemblyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bdpf_mllib_assembly_machinelearning
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bdpf_mllib_assembly_machinelearning
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from bdpf_mllib_assembly_machinelearning
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xunfang.bdpf.mllib.assembly.entity.MachinelearningAssemblyExample">
    delete from bdpf_mllib_assembly_machinelearning
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xunfang.bdpf.mllib.assembly.entity.MachinelearningAssembly">
    insert into bdpf_mllib_assembly_machinelearning (id, bdpf_mllib_assembly_id, num_classes, 
      max_depth, max_Bins, type, 
      num_Iterations, k, num_Trees
      )
    values (#{id,jdbcType=VARCHAR}, #{bdpfMllibAssemblyId,jdbcType=VARCHAR}, #{numClasses,jdbcType=INTEGER}, 
      #{maxDepth,jdbcType=INTEGER}, #{maxBins,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{numIterations,jdbcType=INTEGER}, #{k,jdbcType=INTEGER}, #{numTrees,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xunfang.bdpf.mllib.assembly.entity.MachinelearningAssembly">
    insert into bdpf_mllib_assembly_machinelearning
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bdpfMllibAssemblyId != null">
        bdpf_mllib_assembly_id,
      </if>
      <if test="numClasses != null">
        num_classes,
      </if>
      <if test="maxDepth != null">
        max_depth,
      </if>
      <if test="maxBins != null">
        max_Bins,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="numIterations != null">
        num_Iterations,
      </if>
      <if test="k != null">
        k,
      </if>
      <if test="numTrees != null">
        num_Trees,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="bdpfMllibAssemblyId != null">
        #{bdpfMllibAssemblyId,jdbcType=VARCHAR},
      </if>
      <if test="numClasses != null">
        #{numClasses,jdbcType=INTEGER},
      </if>
      <if test="maxDepth != null">
        #{maxDepth,jdbcType=INTEGER},
      </if>
      <if test="maxBins != null">
        #{maxBins,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="numIterations != null">
        #{numIterations,jdbcType=INTEGER},
      </if>
      <if test="k != null">
        #{k,jdbcType=INTEGER},
      </if>
      <if test="numTrees != null">
        #{numTrees,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xunfang.bdpf.mllib.assembly.entity.MachinelearningAssemblyExample" resultType="java.lang.Long">
    select count(*) from bdpf_mllib_assembly_machinelearning
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bdpf_mllib_assembly_machinelearning
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.bdpfMllibAssemblyId != null">
        bdpf_mllib_assembly_id = #{record.bdpfMllibAssemblyId,jdbcType=VARCHAR},
      </if>
      <if test="record.numClasses != null">
        num_classes = #{record.numClasses,jdbcType=INTEGER},
      </if>
      <if test="record.maxDepth != null">
        max_depth = #{record.maxDepth,jdbcType=INTEGER},
      </if>
      <if test="record.maxBins != null">
        max_Bins = #{record.maxBins,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.numIterations != null">
        num_Iterations = #{record.numIterations,jdbcType=INTEGER},
      </if>
      <if test="record.k != null">
        k = #{record.k,jdbcType=INTEGER},
      </if>
      <if test="record.numTrees != null">
        num_Trees = #{record.numTrees,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bdpf_mllib_assembly_machinelearning
    set id = #{record.id,jdbcType=VARCHAR},
      bdpf_mllib_assembly_id = #{record.bdpfMllibAssemblyId,jdbcType=VARCHAR},
      num_classes = #{record.numClasses,jdbcType=INTEGER},
      max_depth = #{record.maxDepth,jdbcType=INTEGER},
      max_Bins = #{record.maxBins,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      num_Iterations = #{record.numIterations,jdbcType=INTEGER},
      k = #{record.k,jdbcType=INTEGER},
      num_Trees = #{record.numTrees,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunfang.bdpf.mllib.assembly.entity.MachinelearningAssembly">
    update bdpf_mllib_assembly_machinelearning
    <set>
      <if test="bdpfMllibAssemblyId != null">
        bdpf_mllib_assembly_id = #{bdpfMllibAssemblyId,jdbcType=VARCHAR},
      </if>
      <if test="numClasses != null">
        num_classes = #{numClasses,jdbcType=INTEGER},
      </if>
      <if test="maxDepth != null">
        max_depth = #{maxDepth,jdbcType=INTEGER},
      </if>
      <if test="maxBins != null">
        max_Bins = #{maxBins,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="numIterations != null">
        num_Iterations = #{numIterations,jdbcType=INTEGER},
      </if>
      <if test="k != null">
        k = #{k,jdbcType=INTEGER},
      </if>
      <if test="numTrees != null">
        num_Trees = #{numTrees,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunfang.bdpf.mllib.assembly.entity.MachinelearningAssembly">
    update bdpf_mllib_assembly_machinelearning
    set bdpf_mllib_assembly_id = #{bdpfMllibAssemblyId,jdbcType=VARCHAR},
      num_classes = #{numClasses,jdbcType=INTEGER},
      max_depth = #{maxDepth,jdbcType=INTEGER},
      max_Bins = #{maxBins,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      num_Iterations = #{numIterations,jdbcType=INTEGER},
      k = #{k,jdbcType=INTEGER},
      num_Trees = #{numTrees,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>